# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "debian/jessie64"
  config.vm.box = "cargomedia/debian-8-amd64-plain"
  #config.vm.provision "puppet" do |puppet|
  #	puppet.manifests_path = "vagrant_manifests"
  #	puppet.manifest_file = "default.pp"
  #end

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "128"
  end

  SUBNET=101

  config.vm.define "master" do |node|
        node.vm.hostname = "master.lab.itmz.pl"
        node.vm.network "private_network", ip: "192.168.#{SUBNET}.220"
	node.vm.synced_folder "puppetmaster", "/etc/puppet", owner: "root", group: "root"
  	node.vm.provision "shell", inline: "apt-get install puppet -y"
  	node.vm.provision "puppet" 
  end

  config.vm.define "mysql01" do |node|
        node.vm.hostname = "mysql01.lab.itmz.pl"
        node.vm.network "private_network", ip: "192.168.#{SUBNET}.221"
  	node.vm.provision "shell", inline: "apt-get install puppet -y"
  	node.vm.provision "puppet" 
  end

  config.vm.define "mysql02" do |node|
        node.vm.hostname = "mysql02.lab.itmz.pl"
        node.vm.network "private_network", ip: "192.168.#{SUBNET}.222"
  	node.vm.provision "shell", inline: "apt-get install puppet -y"
  	node.vm.provision "puppet" 
  end
  
  # 192.168.#{SUBNET}.223 will be used for Floating IP MySQL cluster

  config.vm.define "client" do |node|
        node.vm.hostname = "client.lab.itmz.pl"
        node.vm.network "private_network", ip: "192.168.#{SUBNET}.224"
  	node.vm.provision "shell", inline: "apt-get install puppet -y"
  	node.vm.provision "puppet" 
  end


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  

end
